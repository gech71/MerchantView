
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Branch {
  id             String                @id @default(uuid())
  name           String
  code           String                @unique
  address        String
  contact        String
  status         String // Approved, Pending, Rejected
  users          BranchUser[]
  allowed_companies allowed_companies[]

  @@map("branches")
}

model BranchUser {
  id        String          @id @default(uuid())
  name      String
  email     String          @unique
  branch    String
  password  String
  status    String // Active, Inactive, Pending
  roleId    String?
  DashBoardRoles DashBoardRoles? @relation(fields: [roleId], references: [id])

  @@map("branch_users")
}

model DashBoardRoles {
  id           String       @id @default(uuid())
  name         String       @unique
  description  String?
  permissions  Json
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  BranchUser   BranchUser[]
  MerchantUser Merchant_users[]

  @@map("dashboard_roles")
}


model allowed_companies {
  Oid                   String   @id @default(uuid())
  ID                    String
  ACCOUNTNUMBER         String
  FIELDNAME             String
  APPROVEUSER           String?
  APPROVED              Boolean
  STATUS                Boolean
  INSERTDATE            DateTime? @default(now())
  UPDATEDATE            DateTime? @updatedAt
  INSERTUSER            String
  UPDATEUSER            String
  OptimisticLockField   Int?
  GCRecord              Int?
  branchName            String?
  Branch                Branch?   @relation(fields: [branchName], references: [name])

  @@map("allowed_companies")
}

model Merchant_users {
  ID                 String          @id @default(uuid())
  FULLNAME           String
  ROLE               String
  STATUS             String
  ACCOUNTNUMBER      String
  ACCOUNTTYPE        String
  PHONENUMBER        String          @unique
  DEVICENAME         String
  ENCRYPTIONKEY      String
  iV                 String
  ISLOGGEDIN         Boolean
  authenticationkey  String
  FAILEDATTMEPTS     Int
  LASTLOGINATTEMPT   DateTime?
  ISLOCKED           Boolean
  UNLOCKEDTIME       DateTime?
  VALUE3             String?
  INSERTUSERID       String
  UPDATEUSERID       String
  INSERTDATE         DateTime?       @default(now())
  UPDATEDATE         DateTime?       @updatedAt
  roleId             String?
  DashBoardRoles     DashBoardRoles? @relation(fields: [roleId], references: [id])
  ApplicationRole    Roles?          @relation(fields: [ROLE], references: [ROLENAME])

  @@map("merchant_users")
}

model Roles {
  ID           String           @id @default(uuid())
  ROLENAME     String           @unique @db.VarChar(100)
  VALUE1       String?
  VALUE2       String?
  VALUE3       String?
  INSERTUSERID String?
  UPDATEUSERID String?
  INSERTDATE   DateTime?        @default(now()) @db.Timestamp(0)
  UPDATEDATE   DateTime?        @updatedAt @db.Timestamp(0)
  MerchantUser Merchant_users[]

  @@map("roles")
}


model merchants_daily_balances {
  ID              String    @id @default(uuid())
  MERCHANTACCOUNT String?
  MERCHANTPHONE   String?
  DAILYBALANCE    Float
  DAILYTXNCOUNT   Int
  BALANCEDATE     DateTime?
  INSERTDATE      DateTime? @default(now())
  UPDATEDATE      DateTime? @updatedAt
  INSERTUSER      String
  UPDATEUSER      String

  @@map("merchants_daily_balances")
}

model merchant_txns {
  ID                   String    @id @default(uuid())
  MERCHANTACCOUNT      String?
  MERCHANTPHONE        String?
  AMOUNT               Float
  TXNID                String?
  CUSTOMERNAME         String?
  CUSTOMERACCOUNT      String?
  T24USER              String?
  T2TRANSACTIONDATE    DateTime?
  STATUS               String
  TRANSACTIONCHANNEL   String?
  TRANSACTIONSERVICE   String?
  VALUE1               String?
  VALUE2               String?
  VALUE3               String?
  INSERTDATE           DateTime? @default(now())
  UPDATEDATE           DateTime? @updatedAt
  INSERTUSER           String
  UPDATEUSER           String

  @@map("merchant_txns")
}

model arif_requests {
  NONCEID                  String    @id @default(uuid())
  SESSIONID                String
  DEBITACCOUNT             String
  CREDITACCOUNT            String
  AMOUNT                   Float
  MERCHANTACCOUNT          String
  SALESPHONE               String
  REQUEST1                 String
  RESPONSE1                String
  REQUEST2                 String
  RESPONSE2                String
  REQUEST3                 String
  RESPONSE3                String
  DATESEND1                DateTime?
  DATERECIVED1             DateTime?
  DATESEND2                DateTime?
  DATERECIVED2             DateTime?
  DATESEND3                DateTime?
  DATERECIVED3             DateTime?
  WEBHOOKBODY              String?
  WEBHOOKRECEIVEDDATE      DateTime?
  WEBHOOKRESPONSE          String?
  ARIFPAYTRANSACTIONID     String
  ARIFPAYTRANSACTIONSTATUS String?
  T24TRANSACTIONID         String?
  T24TRANSACTIONSTATUS     String?

  @@map("arif_requests")
}

model arifpay_endpoints {
  ID                 String    @id @default(uuid())
  BANK               String
  DISPLAYNAME        String
  OTPLENGTH          Int
  ORDER              Int
  ENDPOINT1          String
  ENDPOINT2          String?
  ENDPOINT3          String?
  CANCELURL          String
  ERRORURL           String
  SUCCESSURL         String
  NOTIFYURL          String
  ISTWOSTEP          Boolean
  ISOTP              Boolean
  TRANSACTIONTYPE    String
  BENEFICIARYACCOUNT String
  BENEFICIARYBANK    String
  IMAGEURL           String?
  INSERTDATE         DateTime? @default(now())
  UPDATEDATE         DateTime? @updatedAt
  INSERTUSER         String
  UPDATEUSER         String

  @@map("arifpay_endpoints")
}

model controllersconfigs {
  ID           String    @id @default(uuid())
  CONTROLLERKEY String
  APIKEY       String
  INSERTDATE   DateTime? @default(now())
  UPDATEDATE   DateTime? @updatedAt
  INSERTUSER   String
  UPDATEUSER   String

  @@map("controllersconfigs")
}

model core_integration_settings {
  ID         String    @id @default(uuid())
  UNIQUEKEY  String    @unique
  ADDRESS    String
  USERNAME   String
  PASSWORD   String
  INSERTDATE DateTime? @default(now())
  UPDATEDATE DateTime? @updatedAt
  INSERTUSER String
  UPDATEUSER String

  @@map("core_integration_settings")
}

model paystream_txns {
  ID                    String    @id @default(uuid())
  MERCHANTACCOUNTNUMBER String
  SALERPHONENUMBER      String
  TICKET                String
  ISCOMPLETED           Boolean
  AMOUNT                String
  PAYERACCOUNT          String?
  INSERTDATE            DateTime? @default(now())
  UPDATEDATE            DateTime? @updatedAt
  INSERTUSER            String
  UPDATEUSER            String

  @@map("paystream_txns")
}

model stream_pay_settings {
  ID         String    @id @default(uuid())
  ADDRESS    String
  IV         String
  KEY        String
  HV         String
  USERNAME   String
  PASSWORD   String
  INSERTDATE DateTime? @default(now())
  UPDATEDATE DateTime? @updatedAt
  INSERTUSER String
  UPDATEUSER String

  @@map("stream_pay_settings")
}

model ussd_push_settings {
  ID         String    @id @default(uuid())
  ADDRESS    String
  RESULTURL  String
  USERNAME   String
  PASSWORD   String
  INSERTDATE DateTime? @default(now())
  UPDATEDATE DateTime? @updatedAt
  INSERTUSER String
  UPDATEUSER String

  @@map("ussd_push_settings")
}

model qr_payments {
  ID               String    @id @default(uuid())
  DEBITACCOUNT     String
  CREDITACCOUNT    String
  SALERPHONENUMBER String?
  AMOUNT           Float
  EXPIRETIME       DateTime?
  QRCODE           String
  ISUSED           Boolean
  INSERTDATE       DateTime? @default(now())
  UPDATEDATE       DateTime? @updatedAt
  INSERTUSER       String
  UPDATEUSER       String

  @@map("qr_payments")
}

model account_infos {
  ID            String    @id @default(uuid())
  ACCOUNTNUMBER String    @unique
  PHONENUMBER   String    @unique
  FULLNAME      String
  GENDER        String?
  VALUE1        String?
  VALUE2        String?
  INSERTDATE    DateTime? @default(now())
  UPDATEDATE    DateTime? @updatedAt
  INSERTUSER    String
  UPDATEUSER    String

  @@map("account_infos")
}

model promo_adds {
  ID            String    @id @default(uuid())
  ADDTITLE      String
  ADDSUBTITLE   String
  ADDADDRESS    String
  IMAGEADDRESS  String
  ORDER         Int
  INSERTUSERID  String
  UPDATEUSERID  String
  INSERTDATE    DateTime? @default(now())
  UPDATEDATE    DateTime? @updatedAt

  @@map("promo_adds")
}

model role_capablities {
  ID           String    @id @default(uuid())
  ROLEID       String
  MENUORDER    Int
  SUBMENUORDER Int
  MENUNAME     String
  MENUNAME_am  String
  ADDRESS      String
  PARENT       Boolean?
  PARENTID     String?
  VALUE3       String?
  INSERTUSERID String
  UPDATEUSERID String
  INSERTDATE   DateTime? @default(now())
  UPDATEDATE   DateTime? @updatedAt

  @@map("role_capablities")
}

    