
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model arif_requests {
  NONCEID                  String   @id @unique
  SESSIONID                String
  DEBITACCOUNT             String
  CREDITACCOUNT            String
  AMOUNT                   Float
  MERCHANTACCOUNT          String
  SALESPHONE               String
  REQUEST1                 String?
  RESPONSE1                String?
  REQUEST2                 String?
  RESPONSE2                String?
  REQUEST3                 String?
  RESPONSE3                String?
  WEBHOOKRESPONSE          String?
  ERROR1                   String?
  MESSAGE1                 String?
  ERROR2                   String?
  MESSAGE2                 String?
  ERROR3                   String?
  MESSAGE3                 String?
  DATESEND1                DateTime @db.Timestamp(6)
  DATERECIVED1             DateTime @db.Timestamp(6)
  DATESEND2                DateTime @db.Timestamp(6)
  DATERECIVED2             DateTime @db.Timestamp(6)
  DATESEND3                DateTime? @db.Timestamp(6)
  DATERECIVED3             DateTime? @db.Timestamp(6)
  WEBHOOKRECEIVEDDATE      DateTime? @db.Timestamp(6)
  INSERTUSER               String
  UPDATEUSER               String
  ARIFPAYTRANSACTIONID     String
  ARIFPAYTRANSACTIONSTATUS String
  T24TRANSACTIONSTATUS     String

  allowed_company allowed_companies @relation(fields: [MERCHANTACCOUNT], references: [ACCOUNTNUMBER])
}

model allowed_companies {
  Oid                 String          @id @unique
  ID                  String          @unique
  ACCOUNTNUMBER       String          @unique
  FIELDNAME           String
  APPROVEUSER         String?
  APPROVED            Boolean
  STATUS              String
  INSERTDATE          DateTime        @default(now()) @db.Timestamp(6)
  UPDATEDATE          DateTime        @default(now()) @db.Timestamp(6)
  INSERTUSER          String
  UPDATEUSER          String
  OptimisticLockField Int
  GCRecord            Int
  merchants           Merchant_users[]
  arif_requests       arif_requests[]
}

model Branch {
  id      String @id @default(cuid())
  name    String @unique
  code    String @unique
  address String
  contact String
  status  String
  users   BranchUser[]
}

model Merchant_users {
  ID                String   @id @default(cuid())
  ACCOUNTNUMBER     String
  FULLNAME          String
  ACCOUNTTYPE       String
  PHONENUMBER       String   @unique
  ROLE              String
  DEVICENAME        String?
  ENCRYPTIONKEY     String
  iV                String
  ISLOGGEDIN        Boolean
  authenticationkey String
  STATUS            String
  FAILEDATTMEPTS    Int
  LASTLOGINATTEMPT  DateTime @db.Timestamp(6)
  ISLOCKED          Boolean
  UNLOCKEDTIME      String?
  VALUE3            String?
  INSERTUSERID      String
  UPDATEUSERID      String
  INSERTDATE        DateTime @default(now()) @db.Timestamp(6)
  UPDATEDATE        DateTime @default(now()) @db.Timestamp(6)

  company allowed_companies @relation(fields: [ACCOUNTNUMBER], references: [ACCOUNTNUMBER])
}

model merchants_daily_balances {
  ID              String   @id @default(cuid())
  MERCHANTACCOUNT String
  MERCHANTPHONE   String
  DAILYBALANCE    Float
  DAILYTXNCOUNT   Int
  BALANCEDATE     DateTime @db.Date
  INSERTDATE      DateTime @default(now()) @db.Timestamp(6)
  UPDATEDATE      DateTime @default(now()) @db.Timestamp(6)
  INSERTUSER      String
  UPDATEUSER      String
}

model merchant_txns {
  ID                 String   @id @default(cuid())
  MERCHANTACCOUNT    String
  MERCHANTPHONE      String
  AMOUNT             Float
  TXNID              String   @unique
  CUSTOMERNAME       String
  CUSTOMERACCOUNT    String
  T24USER            String
  T2TRANSACTIONDATE  DateTime @db.Timestamp(6)
  STATUS             String
  TRANSACTIONCHANNEL String
  TRANSACTIONSERVICE String
  VALUE1             String?
  VALUE2             String?
  VALUE3             String?
  INSERTDATE         DateTime @default(now()) @db.Timestamp(6)
  UPDATEDATE         DateTime @default(now()) @db.Timestamp(6)
  INSERTUSER         String
  UPDATEUSER         String
}

model BranchUser {
  id     String @id @default(cuid())
  name   String
  email  String @unique
  branch String
  status String

  branchDetails Branch @relation(fields: [branch], references: [name])
}

model arifpay_endpoints {
  ID                 String   @id @default(cuid())
  BANK               String
  DISPLAYNAME        String
  OTPLENGTH          Int
  ORDER              Int
  ENDPOINT1          String
  ENDPOINT2          String?
  ENDPOINT3          String?
  CANCELURL          String
  ERRORURL           String
  SUCCESSURL         String
  NOTIFYURL          String
  ISTWOSTEP          Boolean
  ISOTP              Boolean
  TRANSACTIONTYPE    String
  BENEFICIARYACCOUNT String
  BENEFICIARYBANK    String
  IMAGEURL           String
  INSERTDATE         DateTime @default(now()) @db.Timestamp(6)
  UPDATEDATE         DateTime @default(now()) @db.Timestamp(6)
  INSERTUSER         String
  UPDATEUSER         String
}

model controllersconfigs {
  ID            String   @id @default(cuid())
  CONTROLLERKEY String   @unique
  APIKEY        String
  INSERTDATE    DateTime @default(now()) @db.Timestamp(6)
  UPDATEDATE    DateTime @default(now()) @db.Timestamp(6)
  INSERTUSER    String
  UPDATEUSER    String
}

model core_integration_settings {
  ID         String   @id @default(cuid())
  UNIQUEKEY  String   @unique
  ADDRESS    String
  USERNAME   String
  PASSWORD   String
  INSERTDATE DateTime @default(now()) @db.Timestamp(6)
  UPDATEDATE DateTime @default(now()) @db.Timestamp(6)
  INSERTUSER String
  UPDATEUSER String
}

model paystream_txns {
  ID                    String   @id @default(cuid())
  MERCHANTACCOUNTNUMBER String
  SALERPHONENUMBER      String
  TICKET                String   @unique
  ISCOMPLETED           Boolean
  AMOUNT                Float
  PAYERACCOUNT          String
  INSERTDATE            DateTime @default(now()) @db.Timestamp(6)
  UPDATEDATE            DateTime @default(now()) @db.Timestamp(6)
  INSERTUSER            String
  UPDATEUSER            String
}

model stream_pay_settings {
  ID         String   @id @default(cuid())
  ADDRESS    String
  IV         String
  KEY        String
  HV         String
  USERNAME   String
  PASSWORD   String
  INSERTDATE DateTime @default(now()) @db.Timestamp(6)
  UPDATEDATE DateTime @default(now()) @db.Timestamp(6)
  INSERTUSER String
  UPDATEUSER String
}

model ussd_push_settings {
  ID         String   @id @default(cuid())
  ADDRESS    String
  RESULTURL  String
  USERNAME   String
  PASSWORD   String
  INSERTDATE DateTime @default(now()) @db.Timestamp(6)
  UPDATEDATE DateTime @default(now()) @db.Timestamp(6)
  INSERTUSER String
  UPDATEUSER String
}

model qr_payments {
  ID               String   @id @default(cuid())
  DEBITACCOUNT     String
  CREDITACCOUNT    String
  SALERPHONENUMBER String
  AMOUNT           Float
  EXPIRETIME       DateTime @db.Timestamp(6)
  QRCODE           String   @unique
  ISUSED           Boolean
  INSERTDATE       DateTime @default(now()) @db.Timestamp(6)
  UPDATEDATE       DateTime @default(now()) @db.Timestamp(6)
  INSERTUSER       String
  UPDATEUSER       String
}

model account_infos {
  ID            String    @id @default(cuid())
  ACCOUNTNUMBER String    @unique
  PHONENUMBER   String    @unique
  FULLNAME      String
  GENDER        String
  VALUE1        String?
  VALUE2        String?
  INSERTDATE    DateTime  @default(now()) @db.Timestamp(6)
  UPDATEDATE    DateTime  @default(now()) @db.Timestamp(6)
  INSERTUSER    String
  UPDATEUSER    String
}
