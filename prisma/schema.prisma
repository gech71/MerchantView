
// datasource db defines the database connection details.
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// generator client defines the Prisma Client generator configuration.
generator client {
  provider = "prisma-client-js"
}

// model Branch represents the branches of the bank.
model Branch {
  id         String   @id @default(uuid())
  name       String   @unique
  code       String   @unique
  address    String
  contact    String
  status     String
  INSERTDATE DateTime? @default(now())
  UPDATEDATE DateTime? @updatedAt
  companies  allowed_companies[]
  users      BranchUser[]
}

// model allowed_companies represents companies that are allowed to transact.
model allowed_companies {
  Oid                 String   @id @default(uuid())
  ID                  String   @unique @default(uuid())
  ACCOUNTNUMBER       String
  FIELDNAME           String
  APPROVEUSER         String?
  APPROVED            Boolean  @default(false)
  STATUS              Boolean  @default(false)
  INSERTDATE          DateTime? @default(now())
  UPDATEDATE          DateTime? @updatedAt
  INSERTUSER          String?
  UPDATEUSER          String?
  OptimisticLockField Int?
  GCRecord            Int?
  branch              Branch?   @relation(fields: [branchName], references: [name])
  branchName          String?
}

// model Merchant_users represents the users of the merchants.
model Merchant_users {
  ID                String   @id @default(uuid())
  FULLNAME          String
  ROLE              String
  STATUS            String
  ACCOUNTNUMBER     String
  ACCOUNTTYPE       String?
  PHONENUMBER       String   @unique
  DEVICENAME        String?
  ENCRYPTIONKEY     String?
  iV                String?
  ISLOGGEDIN        Boolean
  authenticationkey String?
  FAILEDATTMEPTS    Int
  LASTLOGINATTEMPT  DateTime?
  ISLOCKED          Boolean
  UNLOCKEDTIME      DateTime?
  VALUE3            String?
  INSERTUSERID      String?
  UPDATEUSERID      String?
  INSERTDATE        DateTime? @default(now())
  UPDATEDATE        DateTime? @updatedAt
  roleId            String?
  DashBoardRoles    DashBoardRoles? @relation(fields: [roleId], references: [id])
}

// model BranchUser represents the users of the branches.
model BranchUser {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  branch    String
  status    String
  roleId    String?
  DashBoardRoles DashBoardRoles? @relation(fields: [roleId], references: [id])
}

// model merchants_daily_balances represents the daily balances of the merchants.
model merchants_daily_balances {
  ID              String   @id @default(uuid())
  MERCHANTACCOUNT String
  MERCHANTPHONE   String
  DAILYBALANCE    Float
  DAILYTXNCOUNT   Int
  BALANCEDATE     DateTime?
  INSERTDATE      DateTime? @default(now())
  UPDATEDATE      DateTime? @updatedAt
  INSERTUSER      String?
  UPDATEUSER      String?
}

// model merchant_txns represents the transactions of the merchants.
model merchant_txns {
  ID                   String   @id @default(uuid())
  MERCHANTACCOUNT      String
  MERCHANTPHONE        String
  AMOUNT               Float
  TXNID                String
  CUSTOMERNAME         String
  CUSTOMERACCOUNT      String
  T24USER              String?
  T2TRANSACTIONDATE    DateTime?
  STATUS               String
  TRANSACTIONCHANNEL   String?
  TRANSACTIONSERVICE   String?
  VALUE1               String?
  VALUE2               String?
  VALUE3               String?
  INSERTDATE           DateTime? @default(now())
  UPDATEDATE           DateTime? @updatedAt
  INSERTUSER           String?
  UPDATEUSER           String?
}

// model arif_requests represents the requests made to the ArifPay gateway.
model arif_requests {
  NONCEID                  String    @id @default(uuid())
  SESSIONID                String
  DEBITACCOUNT             String
  CREDITACCOUNT            String
  AMOUNT                   Float
  MERCHANTACCOUNT          String
  SALESPHONE               String
  REQUEST1                 String?
  RESPONSE1                String?
  REQUEST2                 String?
  RESPONSE2                String?
  REQUEST3                 String?
  RESPONSE3                String?
  WEBHOOKRESPONSE          String?
  ERROR1                   String?
  MESSAGE1                 String?
  ERROR2                   String?
  MESSAGE2                 String?
  ERROR3                   String?
  MESSAGE3                 String?
  DATESEND1                DateTime?
  DATERECIVED1             DateTime?
  DATESEND2                DateTime?
  DATERECIVED2             DateTime?
  DATESEND3                DateTime?
  DATERECIVED3             DateTime?
  WEBHOOKRECEIVEDDATE      DateTime?
  INSERTUSER               String?
  UPDATEUSER               String?
  ARIFPAYTRANSACTIONID     String?
  ARIFPAYTRANSACTIONSTATUS String?
  T24TRANSACTIONID         String?
  T24TRANSACTIONSTATUS     String?
}

// model arifpay_endpoints represents the endpoints for ArifPay.
model arifpay_endpoints {
  ID                  String   @id @default(uuid())
  BANK                String
  DISPLAYNAME         String
  OTPLENGTH           Int
  ORDER               Int
  ENDPOINT1           String
  ENDPOINT2           String?
  ENDPOINT3           String?
  CANCELURL           String?
  ERRORURL            String?
  SUCCESSURL          String?
  NOTIFYURL           String?
  ISTWOSTEP           Boolean
  ISOTP               Boolean
  TRANSACTIONTYPE     String
  BENEFICIARYACCOUNT  String
  BENEFICIARYBANK     String
  IMAGEURL            String?
  INSERTDATE          DateTime? @default(now())
  UPDATEDATE          DateTime? @updatedAt
  INSERTUSER          String?
  UPDATEUSER          String?
}

// model controllersconfigs represents the configurations for the controllers.
model controllersconfigs {
  ID           String   @id @default(uuid())
  CONTROLLERKEY String
  APIKEY        String
  INSERTDATE    DateTime? @default(now())
  UPDATEDATE    DateTime? @updatedAt
  INSERTUSER    String?
  UPDATEUSER    String?
}

// model core_integration_settings represents the settings for core integration.
model core_integration_settings {
  ID         String   @id @default(uuid())
  UNIQUEKEY  String   @unique
  ADDRESS    String
  USERNAME   String
  PASSWORD   String
  INSERTDATE DateTime? @default(now())
  UPDATEDATE DateTime? @updatedAt
  INSERTUSER String?
  UPDATEUSER String?
}

// model paystream_txns represents the transactions from PayStream.
model paystream_txns {
  ID                    String   @id @default(uuid())
  MERCHANTACCOUNTNUMBER String
  SALERPHONENUMBER      String
  TICKET                String
  ISCOMPLETED           Boolean
  AMOUNT                Float
  PAYERACCOUNT          String
  INSERTDATE            DateTime? @default(now())
  UPDATEDATE            DateTime? @updatedAt
  INSERTUSER            String?
  UPDATEUSER            String?
}

// model stream_pay_settings represents the settings for StreamPay.
model stream_pay_settings {
  ID         String   @id @default(uuid())
  ADDRESS    String
  IV         String
  KEY        String
  HV         String
  USERNAME   String
  PASSWORD   String
  INSERTDATE DateTime? @default(now())
  UPDATEDATE DateTime? @updatedAt
  INSERTUSER String?
  UPDATEUSER String?
}

// model ussd_push_settings represents the settings for USSD Push.
model ussd_push_settings {
  ID         String   @id @default(uuid())
  ADDRESS    String
  RESULTURL  String
  USERNAME   String
  PASSWORD   String
  INSERTDATE DateTime? @default(now())
  UPDATEDATE DateTime? @updatedAt
  INSERTUSER String?
  UPDATEUSER String?
}

// model qr_payments represents the payments made via QR code.
model qr_payments {
  ID               String    @id @default(uuid())
  DEBITACCOUNT     String
  CREDITACCOUNT    String
  SALERPHONENUMBER String
  AMOUNT           Float
  EXPIRETIME       DateTime?
  QRCODE           String
  ISUSED           Boolean
  INSERTDATE       DateTime? @default(now())
  UPDATEDATE       DateTime? @updatedAt
  INSERTUSER       String?
  UPDATEUSER       String?
}

// model account_infos represents the information of the accounts.
model account_infos {
  ID            String   @id @default(uuid())
  ACCOUNTNUMBER String   @unique
  PHONENUMBER   String   @unique
  FULLNAME      String
  GENDER        String?
  VALUE1        String?
  VALUE2        String?
  INSERTDATE    DateTime? @default(now())
  UPDATEDATE    DateTime? @updatedAt
  INSERTUSER    String?
  UPDATEUSER    String?
}

// model promo_adds represents the promotional ads.
model promo_adds {
  ID           String   @id @default(uuid())
  ADDTITLE     String
  ADDSUBTITLE  String
  ADDADDRESS   String
  IMAGEADDRESS String
  ORDER        Int
  INSERTUSERID String?
  UPDATEUSERID String?
  INSERTDATE   DateTime? @default(now())
  UPDATEDATE   DateTime? @updatedAt
}

// model role_capablities represents the capabilities of the roles.
model role_capablities {
  ID           String   @id @default(uuid())
  ROLEID       String
  MENUORDER    Int
  SUBMENUORDER Int
  MENUNAME     String
  MENUNAME_am  String
  ADDRESS      String
  PARENT       String
  PARENTID     String
  VALUE3       String?
  INSERTUSERID String?
  UPDATEUSERID String?
  INSERTDATE   DateTime? @default(now())
  UPDATEDATE   DateTime? @updatedAt
}

model DashBoardRoles {
  id          String   @id @default(uuid())
  name        String   @unique
  description String?
  permissions Json
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  branch_users BranchUser[]
  merchant_users Merchant_users[]
}
