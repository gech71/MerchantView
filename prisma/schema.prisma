datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Branch {
  id         String       @id @default(uuid())
  name       String       @unique
  code       String       @unique
  address    String
  contact    String
  status     String
  INSERTDATE DateTime?    @default(now()) @db.Timestamp(3)
  UPDATEDATE DateTime?    @updatedAt @db.Timestamp(3)
  users      BranchUser[]

  @@map("Branch")
}

model BranchUser {
  id             String          @id @default(uuid())
  name           String
  email          String          @unique
  password       String
  branch         String
  status         String
  roleId         String?
  branchId       String?
  branch_relation Branch?        @relation(fields: [branchId], references: [id])
  DashBoardRoles DashBoardRoles? @relation(fields: [roleId], references: [id])

  @@map("BranchUser")
}

model DashBoardRoles {
  id           String         @id @default(uuid())
  name         String         @unique
  description  String?
  permissions  Json
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  BranchUser   BranchUser[]
  Merchant_users Merchant_users[]

  @@map("DashBoardRoles")
}

model Merchant_users {
  ID                String          @id @default(uuid())
  ACCOUNTNUMBER     String          @db.VarChar(20)
  FULLNAME          String?         @db.VarChar(100)
  ACCOUNTTYPE       String?         @db.VarChar(20)
  PHONENUMBER       String?         @unique @db.VarChar(15)
  ROLE              String?         @db.VarChar(20)
  DEVICENAME        String?         @db.VarChar(100)
  ENCRYPTIONKEY     String?
  iV                String?
  ISLOGGEDIN        Boolean?
  authenticationkey String?
  STATUS            String?         @db.VarChar(100)
  FAILEDATTMEPTS    Int?            @default(0)
  LASTLOGINATTEMPT  DateTime?       @default(now()) @db.Timestamp()
  ISLOCKED          Boolean?        @default(false)
  UNLOCKEDTIME      DateTime?       @default(now()) @db.Timestamp()
  VALUE3            String?
  INSERTUSERID      String?         @default("system")
  UPDATEUSERID      String?         @default("system")
  INSERTDATE        DateTime?       @default(now()) @db.Timestamp()
  UPDATEDATE        DateTime?       @default(now()) @db.Timestamp()
  roleId            String?
  DashBoardRoles    DashBoardRoles? @relation(fields: [roleId], references: [id])
  ApplicationRole   Roles?          @relation(fields: [ROLE], references: [ROLENAME])

  @@map("Merchant_users")
}

model Roles {
  id           String        @id @default(uuid()) @db.Uuid
  ROLENAME     String        @unique @db.VarChar(100)
  VALUE1       String?
  VALUE2       String?
  VALUE3       String?
  INSERTUSERID String?
  UPDATEUSERID String?
  INSERTDATE   DateTime?     @default(now()) @db.Timestamp()
  UPDATEDATE   DateTime?     @updatedAt @db.Timestamp()
  Merchant_users Merchant_users[]
  role_capablities role_capablities[]

  @@map("Roles")
}

model account_infos {
  ID            String    @id @default(uuid())
  ACCOUNTNUMBER String    @db.VarChar(50)
  PHONENUMBER   String    @db.VarChar(15)
  FULLNAME      String?   @db.VarChar(100)
  GENDER        String?
  VALUE1        String?
  VALUE2        String?
  INSERTDATE    DateTime? @default(now()) @db.Timestamp()
  UPDATEDATE    DateTime? @updatedAt @db.Timestamp()
  INSERTUSER    String?
  UPDATEUSER    String?

  @@map("account_infos")
}

model allowed_companies {
  Oid                 String    @id @default(uuid())
  ID                  String    @default(uuid())
  ACCOUNTNUMBER       String    @db.VarChar(50)
  FIELDNAME           String?   @db.VarChar(100)
  APPROVEUSER         String?   @db.VarChar(100)
  APPROVED            Boolean   @default(false)
  STATUS              Boolean   @default(true)
  INSERTDATE          DateTime? @default(now()) @db.Timestamp()
  UPDATEDATE          DateTime? @updatedAt @db.Timestamp()
  INSERTUSER          String?
  UPDATEUSER          String?
  OptimisticLockField Int?
  GCRecord            Int?
  branchName          String?   @db.VarChar(200)

  @@map("allowed_companies")
}

model arif_requests {
  NONCEID                  String    @id @default(uuid())
  SESSIONID                String?   @db.VarChar(500)
  DEBITACCOUNT             String    @db.VarChar(30)
  CREDITACCOUNT            String    @db.VarChar(30)
  AMOUNT                   Decimal
  MERCHANTACCOUNT          String    @db.VarChar(30)
  SALESPHONE               String    @db.VarChar(20)
  ARIFPAYTRANSACTIONID     String?   @db.VarChar(100)
  ARIFPAYTRANSACTIONSTATUS String?   @db.VarChar(50)
  T24TRANSACTIONSTATUS     String?   @db.VarChar(50)
  REQUEST1                 String?
  RESPONSE1                String?
  REQUEST2                 String?
  RESPONSE2                String?
  REQUEST3                 String?
  RESPONSE3                String?
  WEBHOOKRESPONSE          String?
  ERROR1                   String?   @db.VarChar(20)
  MESSAGE1                 String?
  ERROR2                   String?   @db.VarChar(20)
  MESSAGE2                 String?
  ERROR3                   String?   @db.VarChar(20)
  MESSAGE3                 String?
  DATESEND1                DateTime  @db.Timestamp()
  DATERECIVED1             DateTime  @db.Timestamp()
  DATESEND2                DateTime  @default(now()) @db.Timestamp()
  DATERECIVED2             DateTime  @default(now()) @db.Timestamp()
  DATESEND3                DateTime  @db.Timestamp()
  DATERECIVED3             DateTime  @db.Timestamp()
  WEBHOOKRECEIVEDDATE      DateTime  @db.Timestamp()
  INSERTUSER               String?
  UPDATEUSER               String?
  T24TRANSACTIONID         String?   @db.VarChar(150)

  @@map("arif_requests")
}

model arifpay_endpoints {
  ID                 String    @id @default(uuid())
  BANK               String
  DISPLAYNAME        String    @db.VarChar(100)
  OTPLENGTH          Int
  ORDER              Int
  ENDPOINT1          String?
  ENDPOINT2          String?
  ENDPOINT3          String?
  CANCELURL          String
  ERRORURL           String
  SUCCESSURL         String
  NOTIFYURL          String
  ISTWOSTEP          Boolean
  ISOTP              Boolean
  TRANSACTIONTYPE    String?   @db.VarChar(500)
  BENEFICIARYACCOUNT String    @db.VarChar(50)
  BENEFICIARYBANK    String    @db.VarChar(100)
  IMAGEURL           String?
  INSERTDATE         DateTime? @default(now()) @db.Timestamp()
  UPDATEDATE         DateTime? @updatedAt @db.Timestamp()
  INSERTUSER         String?
  UPDATEUSER         String?

  @@map("arifpay_endpoints")
}

model controllersconfigs {
  ID           String    @id @default(uuid())
  CONTROLLERKEY String
  APIKEY       String?
  INSERTDATE   DateTime? @default(now()) @db.Timestamp()
  UPDATEDATE   DateTime? @updatedAt @db.Timestamp()
  INSERTUSER   String?
  UPDATEUSER   String?

  @@map("controllersconfigs")
}

model core_integration_settings {
  ID         String    @id @default(uuid())
  UNIQUEKEY  String?   @db.VarChar(100)
  ADDRESS    String
  USERNAME   String    @db.VarChar(200)
  PASSWORD   String?   @db.VarChar(500)
  INSERTDATE DateTime? @default(now()) @db.Timestamp()
  UPDATEDATE DateTime? @updatedAt @db.Timestamp()
  INSERTUSER String?
  UPDATEUSER String?

  @@map("core_integration_settings")
}

model merchant_txns {
  ID                 String    @id @default(uuid())
  MERCHANTACCOUNT    String    @db.VarChar(20)
  MERCHANTPHONE      String    @db.VarChar(15)
  AMOUNT             Decimal?
  TXNID              String?   @db.VarChar(200)
  CUSTOMERNAME       String?   @db.VarChar(100)
  CUSTOMERACCOUNT    String?   @db.VarChar(50)
  T24USER            String?   @db.VarChar(20)
  T2TRANSACTIONDATE  DateTime? @db.Timestamp()
  STATUS             String?   @db.VarChar(15)
  TRANSACTIONCHANNEL String?   @db.VarChar(50)
  TRANSACTIONSERVICE String?   @db.VarChar(50)
  VALUE1             String?
  VALUE2             String?
  VALUE3             String?
  INSERTDATE         DateTime? @default(now()) @db.Timestamp()
  UPDATEDATE         DateTime? @updatedAt @db.Timestamp()
  INSERTUSER         String?
  UPDATEUSER         String?

  @@map("merchant_txns")
}

model merchants_daily_balances {
  ID              String    @id @default(uuid())
  MERCHANTACCOUNT String    @db.VarChar(50)
  MERCHANTPHONE   String    @db.VarChar(15)
  DAILYBALANCE    Decimal?
  DAILYTXNCOUNT   BigInt    @default(0)
  BALANCEDATE     DateTime? @db.Timestamp()
  INSERTDATE      DateTime? @default(now()) @db.Timestamp()
  UPDATEDATE      DateTime? @updatedAt @db.Timestamp()
  INSERTUSER      String?   @default("system")
  UPDATEUSER      String?   @default("system")

  @@map("merchants_daily_balances")
}

model paystream_txns {
  ID                    String    @id @default(uuid())
  MERCHANTACCOUNTNUMBER String    @db.VarChar(50)
  SALERPHONENUMBER      String    @db.VarChar(15)
  TICKET                String?   @db.VarChar(500)
  ISCOMPLETED           Boolean?
  AMOUNT                String?
  PAYERACCOUNT          String?   @db.VarChar(50)
  INSERTDATE            DateTime? @default(now()) @db.Timestamp()
  UPDATEDATE            DateTime? @updatedAt @db.Timestamp()
  INSERTUSER            String?   @default("system")
  UPDATEUSER            String?   @default("system")

  @@map("paystream_txns")
}

model promo_adds {
  ID           String    @id @default(uuid())
  ADDTITLE     String    @db.VarChar(100)
  ADDSUBTITLE  String?
  ADDADDRESS   String?
  IMAGEADDRESS String?
  ORDER        Int?
  INSERTUSERID String?   @default("system")
  UPDATEUSERID String?   @default("system")
  INSERTDATE   DateTime? @default(now()) @db.Timestamp()
  UPDATEDATE   DateTime? @updatedAt @db.Timestamp()

  @@map("promo_adds")
}

model qr_payments {
  ID               String    @id @default(uuid())
  DEBITACCOUNT     String    @db.VarChar(50)
  CREDITACCOUNT    String?   @db.VarChar(50)
  SALERPHONENUMBER String?   @db.VarChar(15)
  AMOUNT           Decimal
  EXPIRETIME       DateTime  @db.Timestamp()
  QRCODE           String
  ISUSED           Boolean   @default(false)
  INSERTDATE       DateTime? @default(now()) @db.Timestamp()
  UPDATEDATE       DateTime? @updatedAt @db.Timestamp()
  INSERTUSER       String?   @default("system")
  UPDATEUSER       String?   @default("system")

  @@map("qr_payments")
}

model role_capablities {
  ID           String    @id @default(uuid()) @db.Uuid
  ROLEID       String    @db.Uuid
  MENUORDER    Int?
  SUBMENUORDER Int?
  MENUNAME     String?   @db.VarChar(100)
  MENUNAME_am  String?   @db.VarChar(100)
  ADDRESS      String?
  PARENT       Boolean?
  PARENTID     String?   @db.Uuid
  VALUE3       String?
  INSERTUSERID String?   @default("system")
  UPDATEUSERID String?   @default("system")
  INSERTDATE   DateTime? @default(now()) @db.Timestamp()
  UPDATEDATE   DateTime? @updatedAt @db.Timestamp()
  Role         Roles     @relation(fields: [ROLEID], references: [id])

  @@map("role_capablities")
}

model stream_pay_settings {
  ID         String    @id @default(uuid())
  ADDRESS    String
  IV         String
  KEY        String
  HV         String?
  USERNAME   String?
  PASSWORD   String?
  INSERTDATE DateTime? @default(now()) @db.Timestamp()
  UPDATEDATE DateTime? @updatedAt @db.Timestamp()
  INSERTUSER String?   @default("system")
  UPDATEUSER String?   @default("system")

  @@map("stream_pay_settings")
}

model ussd_push_settings {
  ID         String    @id @default(uuid())
  ADDRESS    String
  RESULTURL  String?
  USERNAME   String?
  PASSWORD   String?
  INSERTDATE DateTime? @default(now()) @db.Timestamp()
  UPDATEDATE DateTime? @updatedAt @db.Timestamp()
  INSERTUSER String?   @default("system")
  UPDATEUSER String?   @default("system")

  @@map("ussd_push_settings")
}

    