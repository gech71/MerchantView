
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Branch {
  id         String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String @unique
  code       String
  address    String
  contact    String
  status     String // Approved, Pending, Rejected
  INSERTDATE DateTime? @default(now())
  UPDATEDATE DateTime? @updatedAt
  users      BranchUser[]
  allowed_companies allowed_companies[]
}


model allowed_companies {
  Oid                 String    @id @db.Uuid
  ID                  String    @db.Uuid
  ACCOUNTNUMBER       String
  FIELDNAME           String
  APPROVEUSER         String?
  APPROVED            Boolean
  STATUS              Boolean
  INSERTDATE          DateTime? @default(now())
  UPDATEDATE          DateTime? @updatedAt
  INSERTUSER          String
  UPDATEUSER          String
  OptimisticLockField Int
  GCRecord            Int
  branchName          String?
  Branch              Branch?   @relation(fields: [branchName], references: [name])
}


model Merchant_users {
  ID                String    @id @db.Uuid
  FULLNAME          String
  ROLE              String
  STATUS            String
  ACCOUNTNUMBER     String
  ACCOUNTTYPE       String
  PHONENUMBER       String    @unique
  DEVICENAME        String
  ENCRYPTIONKEY     String
  iV                String
  ISLOGGEDIN        Boolean
  authenticationkey String
  FAILEDATTMEPTS    Int
  LASTLOGINATTEMPT  DateTime?
  ISLOCKED          Boolean
  UNLOCKEDTIME      DateTime?
  VALUE3            String?
  INSERTUSERID      String
  UPDATEUSERID      String
  INSERTDATE        DateTime? @default(now())
  UPDATEDATE        DateTime? @updatedAt
  roleId            String? @db.Uuid
  DashBoardRoles    DashBoardRoles? @relation(fields: [roleId], references: [id])
  ApplicationRole   Roles? @relation(fields: [ROLE], references: [ROLENAME])
}


model BranchUser {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name      String
  email     String   @unique
  password  String
  branchName String?
  status    String // Active, Pending, Inactive
  roleId    String?  @db.Uuid
  Branch    Branch?  @relation(fields: [branchName], references: [name])
  DashBoardRoles DashBoardRoles? @relation(fields: [roleId], references: [id])

  @@map("branch_users")
}

model merchants_daily_balances {
  ID              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  MERCHANTACCOUNT String?
  MERCHANTPHONE   String?
  DAILYBALANCE    Float
  DAILYTXNCOUNT   Int
  BALANCEDATE     DateTime?
  INSERTDATE      DateTime? @default(now())
  UPDATEDATE      DateTime? @updatedAt
  INSERTUSER      String
  UPDATEUSER      String
}

model merchant_txns {
  ID                  String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  MERCHANTACCOUNT     String
  MERCHANTPHONE       String
  AMOUNT              Float
  TXNID               String
  CUSTOMERNAME        String
  CUSTOMERACCOUNT     String
  T24USER             String
  T2TRANSACTIONDATE   DateTime?
  STATUS              String
  TRANSACTIONCHANNEL  String
  TRANSACTIONSERVICE  String
  VALUE1              String?
  VALUE2              String?
  VALUE3              String?
  INSERTDATE          DateTime? @default(now())
  UPDATEDATE          DateTime? @updatedAt
  INSERTUSER          String
  UPDATEUSER          String
}

model arif_requests {
  NONCEID                  String    @id @db.Uuid
  SESSIONID                String?   @db.VarChar(500)
  DEBITACCOUNT             String    @db.VarChar(30)
  CREDITACCOUNT            String    @db.VarChar(30)
  AMOUNT                   Decimal
  MERCHANTACCOUNT          String    @db.VarChar(30)
  SALESPHONE               String    @db.VarChar(20)
  ARIFPAYTRANSACTIONID     String?   @db.VarChar(100)
  ARIFPAYTRANSACTIONSTATUS String?   @db.VarChar(50)
  T24TRANSACTIONSTATUS     String?   @db.VarChar(50)
  REQUEST1                 String?
  RESPONSE1                String?
  REQUEST2                 String?
  RESPONSE2                String?
  REQUEST3                 String?
  RESPONSE3                String?
  WEBHOOKRESPONSE          String?
  ERROR1                   String?   @db.VarChar(20)
  MESSAGE1                 String?
  ERROR2                   String?   @db.VarChar(20)
  MESSAGE2                 String?
  ERROR3                   String?   @db.VarChar(20)
  MESSAGE3                 String?
  DATESEND1                DateTime
  DATERECIVED1             DateTime
  DATESEND2                DateTime  @default(now())
  DATERECIVED2             DateTime  @default(now())
  DATESEND3                DateTime
  DATERECIVED3             DateTime
  WEBHOOKRECEIVEDDATE      DateTime
  INSERTUSER               String?
  UPDATEUSER               String?
  T24TRANSACTIONID         String?   @db.VarChar(150)
}

model arifpay_endpoints {
  ID                  String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  BANK                String
  DISPLAYNAME         String
  OTPLENGTH           Int
  ORDER               Int
  ENDPOINT1           String
  ENDPOINT2           String?
  ENDPOINT3           String?
  CANCELURL           String
  ERRORURL            String
  SUCCESSURL          String
  NOTIFYURL           String
  ISTWOSTEP           Boolean
  ISOTP               Boolean
  TRANSACTIONTYPE     String
  BENEFICIARYACCOUNT  String
  BENEFICIARYBANK     String
  IMAGEURL            String
  INSERTDATE          DateTime? @default(now())
  UPDATEDATE          DateTime? @updatedAt
  INSERTUSER          String
  UPDATEUSER          String
}

model controllersconfigs {
  ID            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  CONTROLLERKEY String
  APIKEY        String
  INSERTDATE    DateTime? @default(now())
  UPDATEDATE    DateTime? @updatedAt
  INSERTUSER    String
  UPDATEUSER    String
}

model core_integration_settings {
  ID          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  UNIQUEKEY   String
  ADDRESS     String
  USERNAME    String
  PASSWORD    String
  INSERTDATE  DateTime? @default(now())
  UPDATEDATE  DateTime? @updatedAt
  INSERTUSER  String
  UPDATEUSER  String
}

model paystream_txns {
  ID                    String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  MERCHANTACCOUNTNUMBER String
  SALERPHONENUMBER      String
  TICKET                String
  ISCOMPLETED           Boolean
  AMOUNT                String
  PAYERACCOUNT          String?
  INSERTDATE            DateTime? @default(now())
  UPDATEDATE            DateTime? @updatedAt
  INSERTUSER            String
  UPDATEUSER            String
}

model stream_pay_settings {
  ID          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  ADDRESS     String
  IV          String
  KEY         String
  HV          String
  USERNAME    String
  PASSWORD    String
  INSERTDATE  DateTime? @default(now())
  UPDATEDATE  DateTime? @updatedAt
  INSERTUSER  String
  UPDATEUSER  String
}

model ussd_push_settings {
  ID          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  ADDRESS     String
  RESULTURL   String
  USERNAME    String
  PASSWORD    String
  INSERTDATE  DateTime? @default(now())
  UPDATEDATE  DateTime? @updatedAt
  INSERTUSER  String
  UPDATEUSER  String
}

model qr_payments {
  ID               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  DEBITACCOUNT     String
  CREDITACCOUNT    String
  SALERPHONENUMBER String
  AMOUNT           Float
  EXPIRETIME       DateTime?
  QRCODE           String
  ISUSED           Boolean
  INSERTDATE       DateTime? @default(now())
  UPDATEDATE       DateTime? @updatedAt
  INSERTUSER       String
  UPDATEUSER       String
}

model account_infos {
  ID            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  ACCOUNTNUMBER String
  PHONENUMBER   String
  FULLNAME      String
  GENDER        String
  VALUE1        String?
  VALUE2        String?
  INSERTDATE    DateTime? @default(now())
  UPDATEDATE    DateTime? @updatedAt
  INSERTUSER    String
  UPDATEUSER    String
}

model promo_adds {
  ID            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  ADDTITLE      String
  ADDSUBTITLE   String
  ADDADDRESS    String
  IMAGEADDRESS  String
  ORDER         Int
  INSERTUSERID  String
  UPDATEUSERID  String
  INSERTDATE    DateTime? @default(now())
  UPDATEDATE    DateTime? @updatedAt
}

model role_capablities {
  ID           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  ROLEID       String    @db.Uuid
  MENUORDER    Int
  SUBMENUORDER Int
  MENUNAME     String
  MENUNAME_am  String
  ADDRESS      String
  PARENT       Boolean?
  PARENTID     String?
  VALUE3       String?
  INSERTUSERID String
  UPDATEUSERID String
  INSERTDATE   DateTime? @default(now())
  UPDATEDATE   DateTime? @updatedAt
  Roles        Roles?    @relation(fields: [ROLEID], references: [ID])
}

model Roles {
  ID           String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  ROLENAME     String  @unique @db.VarChar(100)
  VALUE1       String?
  VALUE2       String?
  VALUE3       String?
  INSERTUSERID String?
  UPDATEUSERID String?
  INSERTDATE   DateTime? @default(now()) @db.Timestamp()
  UPDATEDATE   DateTime? @updatedAt @db.Timestamp()
  Merchant_users Merchant_users[]
  role_capablities role_capablities[]
}

model DashBoardRoles {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name String @unique
  description String?
  permissions Json?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  BranchUser BranchUser[]
  Merchant_users Merchant_users[]

  @@map("dashboard_roles")
}
