// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model allowed_companies {
  Oid                   String    @id @unique
  ID                    String    @unique
  ACCOUNTNUMBER         String
  FIELDNAME             String
  APPROVEUSER           String?
  APPROVED              Boolean   @default(false)
  STATUS                String
  INSERTDATE            DateTime  @default(now())
  UPDATEDATE            DateTime  @updatedAt
  INSERTUSER            String
  UPDATEUSER            String
  OptimisticLockField   Int
  GCRecord              Int
  branch                String?
}

model Branch {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  code      String    @unique
  address   String
  contact   String
  status    String
  INSERTDATE DateTime @default(now())
  UPDATEDATE DateTime @updatedAt
}

model merchant_users {
  ID                String    @id @unique
  password          String
  FULLNAME          String
  ROLE              String
  STATUS            String
  ACCOUNTNUMBER     String
  ACCOUNTTYPE       String
  PHONENUMBER       String    @unique
  DEVICENAME        String
  ENCRYPTIONKEY     String
  iV                String
  ISLOGGEDIN        Boolean
  authenticationkey String
  FAILEDATTMEPTS    Int
  LASTLOGINATTEMPT  DateTime
  ISLOCKED          Boolean
  UNLOCKEDTIME      DateTime?
  VALUE3            String?
  INSERTUSERID      String
  UPDATEUSERID      String
  INSERTDATE        DateTime  @default(now())
  UPDATEDATE        DateTime  @updatedAt
  
  roleId            String?
  role              Role?     @relation(fields: [roleId], references: [id])
}

model BranchUser {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  branch    String
  status    String
  password  String
  roleId    String?
  role      Role?     @relation(fields: [roleId], references: [id])
}

model merchants_daily_balances {
  ID              Int       @id @default(autoincrement())
  MERCHANTACCOUNT String
  MERCHANTPHONE   String
  DAILYBALANCE    Float
  DAILYTXNCOUNT   Int
  BALANCEDATE     DateTime
  INSERTDATE      DateTime  @default(now())
  UPDATEDATE      DateTime  @updatedAt
  INSERTUSER      String
  UPDATEUSER      String
}

model merchant_txns {
  ID                  Int       @id @default(autoincrement())
  MERCHANTACCOUNT     String
  MERCHANTPHONE       String
  AMOUNT              Float
  TXNID               String
  CUSTOMERNAME        String
  CUSTOMERACCOUNT     String
  T24USER             String
  T2TRANSACTIONDATE   DateTime
  STATUS              String
  TRANSACTIONCHANNEL  String
  TRANSACTIONSERVICE  String
  VALUE1              String?
  VALUE2              String?
  VALUE3              String?
  INSERTDATE          DateTime  @default(now())
  UPDATEDATE          DateTime  @updatedAt
  INSERTUSER          String
  UPDATEUSER          String
}

model arif_requests {
  NONCEID                   String    @id @unique
  SESSIONID                 String
  DEBITACCOUNT              String
  CREDITACCOUNT             String
  AMOUNT                    Float
  MERCHANTACCOUNT           String
  SALESPHONE                String
  REQUEST1                  String?
  RESPONSE1                 String?
  REQUEST2                  String?
  RESPONSE2                 String?
  REQUEST3                  String?
  RESPONSE3                 String?
  WEBHOOKRESPONSE           String?
  ERROR1                    String?
  MESSAGE1                  String?
  ERROR2                    String?
  MESSAGE2                  String?
  ERROR3                    String?
  MESSAGE3                  String?
  DATESEND1                 DateTime?
  DATERECIVED1              DateTime?
  DATESEND2                 DateTime?
  DATERECIVED2              DateTime?
  DATESEND3                 DateTime?
  DATERECIVED3              DateTime?
  WEBHOOKRECEIVEDDATE       DateTime?
  INSERTUSER                String
  UPDATEUSER                String
  ARIFPAYTRANSACTIONID      String
  ARIFPAYTRANSACTIONSTATUS  String?
  T24TRANSACTIONID          String?
  T24TRANSACTIONSTATUS      String?
}

model arifpay_endpoints {
  ID                Int       @id @default(autoincrement())
  BANK              String
  DISPLAYNAME       String
  OTPLENGTH         Int
  ORDER             Int
  ENDPOINT1         String
  ENDPOINT2         String?
  ENDPOINT3         String?
  CANCELURL         String
  ERRORURL          String
  SUCCESSURL        String
  NOTIFYURL         String
  ISTWOSTEP         Boolean
  ISOTP             Boolean
  TRANSACTIONTYPE   String
  BENEFICIARYACCOUNT String
  BENEFICIARYBANK   String
  IMAGEURL          String
  INSERTDATE        DateTime  @default(now())
  UPDATEDATE        DateTime  @updatedAt
  INSERTUSER        String
  UPDATEUSER        String
}

model controllersconfigs {
  ID            Int       @id @default(autoincrement())
  CONTROLLERKEY String
  APIKEY        String
  INSERTDATE    DateTime  @default(now())
  UPDATEDATE    DateTime  @updatedAt
  INSERTUSER    String
  UPDATEUSER    String
}

model core_integration_settings {
  ID          Int       @id @default(autoincrement())
  UNIQUEKEY   String    @unique
  ADDRESS     String
  USERNAME    String
  PASSWORD    String
  INSERTDATE  DateTime  @default(now())
  UPDATEDATE  DateTime  @updatedAt
  INSERTUSER  String
  UPDATEUSER  String
}

model paystream_txns {
  ID                    Int       @id @default(autoincrement())
  MERCHANTACCOUNTNUMBER String
  SALERPHONENUMBER      String
  TICKET                String
  ISCOMPLETED           Boolean
  AMOUNT                Float
  PAYERACCOUNT          String
  INSERTDATE            DateTime  @default(now())
  UPDATEDATE            DateTime  @updatedAt
  INSERTUSER            String
  UPDATEUSER            String
}

model stream_pay_settings {
  ID          Int       @id @default(autoincrement())
  ADDRESS     String
  IV          String
  KEY         String
  HV          String
  USERNAME    String
  PASSWORD    String
  INSERTDATE  DateTime  @default(now())
  UPDATEDATE  DateTime  @updatedAt
  INSERTUSER  String
  UPDATEUSER  String
}

model ussd_push_settings {
  ID          Int       @id @default(autoincrement())
  ADDRESS     String
  RESULTURL   String
  USERNAME    String
  PASSWORD    String
  INSERTDATE  DateTime  @default(now())
  UPDATEDATE  DateTime  @updatedAt
  INSERTUSER  String
  UPDATEUSER  String
}

model qr_payments {
  ID                Int       @id @default(autoincrement())
  DEBITACCOUNT      String
  CREDITACCOUNT     String
  SALERPHONENUMBER  String
  AMOUNT            Float
  EXPIRETIME        DateTime
  QRCODE            String
  ISUSED            Boolean
  INSERTDATE        DateTime  @default(now())
  UPDATEDATE        DateTime  @updatedAt
  INSERTUSER        String
  UPDATEUSER        String
}

model account_infos {
  ID            Int       @id @default(autoincrement())
  ACCOUNTNUMBER String
  PHONENUMBER   String
  FULLNAME      String
  GENDER        String?
  VALUE1        String?
  VALUE2        String?
  INSERTDATE    DateTime  @default(now())
  UPDATEDATE    DateTime  @updatedAt
  INSERTUSER    String
  UPDATEUSER    String
}

model promo_adds {
  ID            String    @id @unique
  ADDTITLE      String
  ADDSUBTITLE   String
  ADDADDRESS    String
  IMAGEADDRESS  String
  displayOrder  Int
  INSERTUSERID  String
  UPDATEUSERID  String
  INSERTDATE    DateTime  @default(now())
  UPDATEDATE    DateTime  @updatedAt
}

model role_capablities {
  ID            Int       @id @default(autoincrement())
  ROLEID        String
  MENUORDER     Int
  SUBMENUORDER  Int
  MENUNAME      String
  MENUNAME_am   String
  ADDRESS       String
  PARENT        String
  PARENTID      String
  VALUE3        String?
  INSERTUSERID  String
  UPDATEUSERID  String
  INSERTDATE    DateTime  @default(now())
  UPDATEDATE    DateTime  @updatedAt
}

model Role {
  id            String    @id @default(cuid())
  name          String    @unique
  description   String?
  permissions   Json
  merchantUsers merchant_users[]
  branchUsers   BranchUser[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}
